//----------------------------------------------------------------------------------------------------;
var fileNm = "/js-MongooDB/router/mongodb/_remove/remove.js";
if( print ) print( "[ S ] - " + fileNm + "----------" );
//----------------------------------------------------------------------------------------------------;

return { r : 13, m : "Unauthorized", data : "remove는 사용 불가함." };

//----------------------------------------------------------------------------------------------------;

//	DEFINE - FUNCTION;

//----------------------------------------------------------------------------------------------------;

/**
 * 이 dbjs 기능을 사용할수 없는 collection 목록
 * @property {Object}
 */
var _list_Negative = {
	member : {
		member_basic : 0
		, member_session : 0
	}
};

//----------------------------------------------------------------------------------------------------;

//	DEFINE;

//----------------------------------------------------------------------------------------------------;

//----------------------------------------------------------------------------------------------------;

//	DATABASE;

//----------------------------------------------------------------------------------------------------;

var _db;

//----------------------------------------------------------------------------------------------------;

//	COLLECTION;

//----------------------------------------------------------------------------------------------------;

var _col;

//----------------------------------------------------------------------------------------------------;

//	DOCUMENT;

//----------------------------------------------------------------------------------------------------;

//----------------------------------------------------------------------------------------------------;

//	PARAMETER;

//----------------------------------------------------------------------------------------------------;

//--------------------------------------------------[ S ] - 치환 문자열;
/**
 * @property {Object}
 * <code>
	{
		db : ""
		 , col : ""
		 , t : {}
		 , justOne : {Boolean}
	}
 * </code>
 */
var d = <!=data=!>;
	TtwLog.logjson( d );
//--------------------------------------------------[ E ] - 치환 문자열;


//----------------------------------------------------------------------------------------------------[ S ] - VALIDATION;
if( _list_Negative[ d.db ] )
{
	if( !_list_Negative[ d.db ][ d.col ] )
	{
		return { r : 13, m : "Unauthorized", data : d.db + "." + d.col + "은 사용 불가함." };
	}
}

if( !d.t )
{
	TtwLog.error( "t 객체는 필수 값" );
	return { r : 2, m : "BadValue", data : "t 객체는 필수 값" };
}

if( !d.justOne ) d.justOne = false;
//----------------------------------------------------------------------------------------------------[ E ] - VALIDATION;


//----------------------------------------------------------------------------------------------------;
_db = db.getSiblingDB( d.db );

_col = _db.getCollection( d.col );

var _result;

try
{
	_result = _col.remove( d.t, d.justOne );
}
catch( e )
{
	return { r : e.code, m : message, nm : e.name };
}
//----------------------------------------------------------------------------------------------------;


//----------------------------------------------------------------------------------------------------;
if( print ) print( "[ E ] - " + fileNm + "----------" );
//----------------------------------------------------------------------------------------------------;

//*/
delete _result.getRawResponse;
delete _result.getUpsertedId;
delete _result.getWriteError;
delete _result.getWriteConcernError;
delete _result.hasWriteError;
delete _result.hasWriteConcernError;
delete _result.shellPrint;
delete _result.tojson;
delete _result.toString;

return _result;
//*/

/*/
return _result.tojson();
//*/

/*/
var r = {
	nMatched : _result.nMatched
	, nModified : _result.nModified
	, nremoveed : _result.nremoveed
	, nRemoved : _result.nRemoved
	, nUpserted : _result.nUpserted
};

return r;
//*/