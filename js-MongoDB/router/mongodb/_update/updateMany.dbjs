//----------------------------------------------------------------------------------------------------;
var fileNm = "/js-MongooDB/router/mongodb/_update/updateMany.js";
if( print ) print( "[ S ] - " + fileNm + "----------" );
//----------------------------------------------------------------------------------------------------;

//----------------------------------------------------------------------------------------------------;

//	DEFINE - FUNCTION;

//----------------------------------------------------------------------------------------------------;

/**
 * 이 dbjs 기능을 사용할수 없는 collection 목록
 * @property {Object}
 */
var _list_Negative = {
	member : {
		member_basic : 0
		, member_session : 0
	}
};

//----------------------------------------------------------------------------------------------------;

//	DEFINE;

//----------------------------------------------------------------------------------------------------;

//----------------------------------------------------------------------------------------------------;

//	DATABASE;

//----------------------------------------------------------------------------------------------------;

var _db;

//----------------------------------------------------------------------------------------------------;

//	COLLECTION;

//----------------------------------------------------------------------------------------------------;

var _col;

//----------------------------------------------------------------------------------------------------;

//	DOCUMENT;

//----------------------------------------------------------------------------------------------------;

//----------------------------------------------------------------------------------------------------;

//	PARAMETER;

//----------------------------------------------------------------------------------------------------;

//--------------------------------------------------[ S ] - 치환 문자열;
/**
 * @property {Object}
 * <code>
	{
		db : ""
		 , col : ""
		 , filter : {}
		 , update : {}
		 , options : {
			 upsert : {Boolean}
		 }
	}
 * </code>
 */
var d = <!=data=!>;
	TtwLog.logjson( d );
//--------------------------------------------------[ E ] - 치환 문자열;


//----------------------------------------------------------------------------------------------------[ S ] - VALIDATION;
if( _list_Negative[ d.db ] )
{
	if( !_list_Negative[ d.db ][ d.col ] )
	{
		return { r : 13, m : "Unauthorized", data : d.db + "." + d.col + "은 사용 불가함." };
	}
}

if( !d.filter )
{
	TtwLog.error( "filter 객체는 필수 값" );
	return { r : 2, m : "BadValue", data : "filter 객체는 필수 값" };
}

if( !d.update )
{
	TtwLog.error( "update 객체는 필수 값" );
	return { r : 2, m : "BadValue", data : "update 객체는 필수 값" };
}

if( !d.options )
{
	d.options = { upsert : false };
}


//--------------------------------------------------[ S ] - Update 불가능 Properties 체크;
if( d.obj.hasOwnProperty( "_id" ) ) return { r : 2, m : "BadValue", data : "_id 변경은 이 기능으로 불가함" };
if( d.obj.hasOwnProperty( "mid" ) ) return { r : 2, m : "BadValue", data : "mid 변경은 이 기능으로 불가함" };
if( d.obj.hasOwnProperty( "mpw" ) ) return { r : 2, m : "BadValue", data : "mpw 변경은 이 기능으로 불가함" };
//--------------------------------------------------[ E ] - Update 불가능 Properties 체크;


//----------------------------------------------------------------------------------------------------[ E ] - VALIDATION;


//----------------------------------------------------------------------------------------------------;
_db = db.getSiblingDB( d.db );

_col = _db.getCollection( d.col );

var _result;

try
{
	_result = _col.updateMany( d.filter, d.update, d.options );
}
catch( e )
{
	return { r : e.code, m : message, nm : e.name };
}

//----------------------------------------------------------------------------------------------------;


//----------------------------------------------------------------------------------------------------;
if( print ) print( "[ E ] - " + fileNm + "----------" );
//----------------------------------------------------------------------------------------------------;

return _result;