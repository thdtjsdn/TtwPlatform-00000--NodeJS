//----------------------------------------------------------------------------------------------------;
var fileNm = "/js-MongooDB/router/mongodb/_find/find.js";
if( print ) print( "[ S ] - " + fileNm + "----------" );
//----------------------------------------------------------------------------------------------------;

//----------------------------------------------------------------------------------------------------;

//	DEFINE - FUNCTION;

//----------------------------------------------------------------------------------------------------;

/**
 * 이 dbjs 기능을 사용할수 없는 collection 목록
 * @property {Object}
 */
var _list_Negative = {
	member : {
		member_basic : 0
		, member_session : 0
	}
};

//----------------------------------------------------------------------------------------------------;

//	DEFINE;

//----------------------------------------------------------------------------------------------------;

//----------------------------------------------------------------------------------------------------;

//	DATABASE;

//----------------------------------------------------------------------------------------------------;

var _db;

//----------------------------------------------------------------------------------------------------;

//	COLLECTION;

//----------------------------------------------------------------------------------------------------;

var _col;

//----------------------------------------------------------------------------------------------------;

//	DOCUMENT;

//----------------------------------------------------------------------------------------------------;

//----------------------------------------------------------------------------------------------------;

//	PARAMETER;

//----------------------------------------------------------------------------------------------------;

//--------------------------------------------------[ S ] - 치환 문자열;
/**
 * @property {Object}
 * <code>
	{
		db : ""
		 , col : ""
		 , query : {}
		 , fields : {}
		 , limit : {Uint}
		 , skip : {Uint}
		 , batchSize : {Uint}
		 , options : {}
	}
 * </code>
 */
var d = <!=data=!>;
	TtwLog.logjson( d );
//--------------------------------------------------[ E ] - 치환 문자열;


//----------------------------------------------------------------------------------------------------[ S ] - VALIDATION;
if( _list_Negative[ d.db ] )
{
	if( !_list_Negative[ d.db ][ d.col ] )
	{
		return { r : 13, m : "Unauthorized", data : d.db + "." + d.col + "은 사용 불가함." };
	}
}

if( !d.query )
{
	TtwLog.error( "query 객체는 필수 값" );
	return { r : 2, m : "BadValue", data : "query 객체는 필수 값" };
}

if( !d.fields )
{
	d.fields = null;
}

if( !d.limit ) d.limit = null;
if( !d.skip ) d.skip = null;
//if( !d.batchSize ) d.batchSize = null;
if( !d.options ) d.options = null;
//----------------------------------------------------------------------------------------------------[ E ] - VALIDATION;


//----------------------------------------------------------------------------------------------------;
_db = db.getSiblingDB( d.db );

_col = _db.getCollection( d.col );

var _cursor;

try
{
	//_cursor = _col.query( d.query, d.fields, d.limit, d.skip, d.batchSize, d.options );
	_cursor = _col.query( d.query, d.fields, d.limit, d.skip, null, d.options );
}
catch( e )
{
	return { r : e.code, m : message, nm : e.name };
}
//----------------------------------------------------------------------------------------------------;

var r = [];

_cursor.forEach( function( doc ){


	//----------------------------------------------------------------------------------------------------[ S ] - 삭제 속성;
	//삭제할 Properties 목록 delete 하기;
	delete doc.mpw;
	//----------------------------------------------------------------------------------------------------[ E ] - 삭제 속성;


	r.push( doc );
});

//----------------------------------------------------------------------------------------------------;
if( print ) print( "[ E ] - " + fileNm + "----------" );
//----------------------------------------------------------------------------------------------------;

return r;