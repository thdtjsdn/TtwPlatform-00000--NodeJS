//----------------------------------------------------------------------------------------------------;
var fileNm = "js/b2link/request/global.b2link.request.get__member_session$checkSessionAndReqMongoDB__CallBack.js";
if( console ) console.log( "[ S ] - " + fileNm + "----------" );
//----------------------------------------------------------------------------------------------------;

(function(){
	var _query = global.b2link.fs.getDBJS( "./js/b2link_router/member/session/check_session.dbjs" );

	/**
	 * ClientRequest에 포함되어온 Session을 인증 후 MongoDB로 Request함.
	 * MongoDB 까지의 Request가 종료된 후엔 DB로부터 전달받을 데이터를 바로 ClientResponse로 작성하여 Client Browser로 전달한다.
	 *
	 * @function
	 * @param {http.ClientRequest} req Client Browser에서 서버로 요청시 보낸 정보를 포함한 객체(내부적으로 생성됨)
	 * @param {http.ClientResponse} res 서버에서 Client Browser로 요청에 맞는 응답 데이터를 보내기 위한 객체(내부적으로 생성됨)
	 * @param {String} q query Session 체크를 위한 데이터
	 * @param {String} db mongodb Name 사용하게 될 Database Name
	 * @param {String} nq next query Session 인증 후 실행될 Query
	 * @param {Function} cbFunction Session 인증 후 Query까지 요청/응답 후 응답된 데이터를 넘겨받아 실행될 Callback 함수
	 *	function( req, res, error, result ){} 형태로 작성되는 함수.
	 */
	global.b2link.request.get__member_session$checkSessionAndReqMongoDB__CallBack = function( req, res, q, db, nq, cbFunction )
	{
		global.TtwLog.timeStamp( "\n" );
		global.TtwLog.timeStamp( "---- [ S ] - global.b2link.request.get__member_session$checkSessionAndReqMongoDB__CallBack():void----------" );

		var t = global.server;//HTTP Server;
		//var q = global.b2link.url.getQueryFromURL( req.url );//Query;
		//var qp = global.b2link.session.get_or_create__Session( req, res, q );//Query Parameter;

		//q.sid ? qp.sid = q.sid : null;

		q.db = "member";

		//Request Database;
		//q.q = "member_session$check_session__Expired__sid(" + JSON.stringify( qp.sid ) + ")";
		q.q = _query.replace( "<!=sid=!>", q.sid );
			//console.logObjectInformation( q, "q" );
			//console.logObjectInformation( qp, "qp" );

		t.req_DB( req, res, q, function( error, result ){
			global.TtwLog.timeStamp( "-- [ S ] - global.b2link.request.get__member_session$checkSessionAndReqMongoDB__CallBack::res():void----------" );
			if( error )
			{
				/*/
				global.b2link.response.send_200_False__ErrorLog( req, res, q, error );
				/*/
				global.b2link.response.send_200_False( req, res );
				//*/
				global.TtwLog.timeStamp( "-- [ E ] - global.b2link.request.get__member_session$checkSessionAndReqMongoDB__CallBack::res():void----------if( error ) return;" );
				return;
			}

			if( 0 == result ) global.b2link.response.send_301_DestroySession( req, res );
			else if( 1 == result )
			{
				/*/
				global.b2link.response.send_200_JSON( req, res, result );
				/*/
				//q.db = db ? db : "admin";
				q.db = "admin";
				q.q = nq;

				//global.b2link_router.STATIC.REQUEST_COUNT.P1();

				//cbFunction.req = req;
				//cbFunction.res = res;
				t.req_DB( req, res, q, function( error, result ){ cbFunction( req, res, error, result ); } );
				//*/
			}

			global.TtwLog.timeStamp( "-- [ E ] - global.b2link.request.get__member_session$checkSessionAndReqMongoDB__CallBack::res():void----------" );
		});

		global.TtwLog.timeStamp( "---- [ E ] - global.b2link.request.get__member_session$checkSessionAndReqMongoDB__CallBack():void----------" );
		global.TtwLog.timeStamp( "\n" );
	};
})();

//----------------------------------------------------------------------------------------------------;
if( console ) console.log( "[ E ] - " + fileNm + "----------" );
//----------------------------------------------------------------------------------------------------;